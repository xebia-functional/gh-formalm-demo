version: "3.9"

networks:
  github-alerts:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - github-alerts

  broker:
    image: confluentinc/cp-server:6.2.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
    networks:
      - github-alerts

  kafka-tools:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka-tools
    container_name: kafka-tools
    command: [ "tail", "-f", "/dev/null" ]
    networks:
      - github-alerts

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
    networks:
      - github-alerts

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.2.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
      - github-alerts

  db-subscriptions:
    image: 'postgres'
    container_name: db-subscriptions
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=github_alerts_subscriptions
    networks:
      - github-alerts

  db-events:
    image: 'postgres'
    container_name: db-events
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=github_alerts_events
    command: -p 5433
    networks:
      - github-alerts

  subscriptions-service:
    container_name: subscriptions-service
    build: ./subscriptions
    restart: always
    ports:
      - '8080:8080'
    environment:
      DB_URL: "jdbc:postgresql://db-subscriptions:5432/github_alerts_subscriptions"
      BOOTSTRAP_SERVERS: "broker:9092"
      SCHEMA_REGISTRY: "http://schema-registry:8081"
    networks:
      - github-alerts
    depends_on:
      - zookeeper
      - broker
      - schema-registry
      - db-subscriptions

  events-service:
    container_name: events-service
    build: ./events
    restart: always
    ports:
      - '8079:8079'
    environment:
      DB_URL: "jdbc:postgresql://db-events:5433/github_alerts_events"
      BOOTSTRAP_SERVERS: "broker:9092"
      SCHEMA_REGISTRY: "http://schema-registry:8081"
      GITHUB_TOKEN_API: "${GITHUB_TOKEN_API}"
      HOST: "${HOST}"
    networks:
      - github-alerts
    depends_on:
      - zookeeper
      - broker
      - schema-registry
      - db-events

  notifications-service:
    container_name: notifications-service
    build: ./notifications
    restart: always
    environment:
      BOOTSTRAP_SERVERS: "broker:9092"
      SCHEMA_REGISTRY: "http://schema-registry:8081"
      SLACK_TOKEN_API: "${SLACK_TOKEN_API}"
    networks:
      - github-alerts
    depends_on:
      - zookeeper
      - broker
      - schema-registry
