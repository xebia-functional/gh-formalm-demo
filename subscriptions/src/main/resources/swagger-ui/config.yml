openapi: 3.0.0
info:
  title: GitHub Alerts
  description: Source code of the project available at [GitHub](https://github.com/47deg/github-alerts-scala-david.corral).
  version: 0.0.1
servers:
  - url: http://localhost:8080/api
    description: Deployed on localhost for testing
components:
  schemas:
    Repository:
      type: object
      properties:
        organization:
          type: string
        repository:
          type: string
    RepositoryList:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            type: object
            $ref : '#/components/schemas/Repository'
    Subscription:
      type: object
      properties:
        organization:
          type: string
        repository:
          type: string
        createdAt:
          type: string
          format: datetime
    SubscriptionList:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            type: object
            $ref : '#/components/schemas/Subscription'
    SlackCommand:
      type: object
      properties:
        command:
          type: string
          description: The command to be performed
          enum: [subscribe, unsubscribe]
        text:
          type: string
          description: The list of repositories to subscribe to, separated by spaces, with the following format 'organization/repository'
          example: 47deg/scalacon21-slides 47deg/47deg.github.io
        response_url:
          type: string
          format: uri
          description: A temporary webhook URL that you can use to generate messages responses.
        trigger_id:
          type: string
          description: A short-lived ID that will let your app open a modal.
        user_id:
          type: string
          description: The ID of the user who triggered the command.
        channel_id:
          type: string
          description: The ID of the channel that the user used to send the command.

paths:
  /subscription/{user}:
    get:
      summary: Returns the subscriptions of an user.
      parameters:
        - name: user
          in: path
          required: true
          description: The user id in UUID format.
          schema:
            type : string
            format: uuid
      responses:
        '200':
          description: Returns the list of current subscriptions of the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionList'
        '404':
          description: Returns an error if the user doesn't exists
        '500':
          description: Returns an internal server error if something went wrong
    post:
      summary: Adds new subscriptions to an user
      parameters:
        - name: user
          in: path
          required: true
          description: The user id in UUID format.
          schema:
            type : string
            format: uuid
      requestBody:
        description: The list of repositories to subscribe the user to
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryList'
      responses:
        '201':
          description: Returns the list of repositories that the user just subscribed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryList'
        '400':
          description: Returns an error if body is malformed or some of the repositories is not valid
        '500':
          description: Returns an internal server error if something went wrong
    delete:
      summary: Removes subscriptions from an user
      parameters:
        - name: user
          in: path
          required: true
          description: The user id in UUID format.
          schema:
            type : string
            format: uuid
      requestBody:
        description: The list of repositories to unsubscribe from the user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryList'
      responses:
        '204':
          description: The user have been unsubscribe from the valid repositories sent
        '400':
          description: Returns an error if body is malformed
        '404':
          description: Returns an error if the user doesn't exists
        '500':
          description: Returns an internal server error if something went wrong
  /subscription/slack/command:
    post:
      summary: Adds new subscriptions to an user through an slack command
      requestBody:
        description: The slack command attributes generated by the slack bot application
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SlackCommand'
      responses:
        '201':
          description: Returns the list of repositories that the user just subscribed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryList'
        '400':
          description: Returns an error if body is malformed or some of the repositories is not valid
        '500':
          description: Returns an internal server error if something went wrong